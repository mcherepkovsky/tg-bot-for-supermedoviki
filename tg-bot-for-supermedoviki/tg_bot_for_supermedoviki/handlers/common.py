import logging
from io import BytesIO

from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, InputFile, BufferedInputFile

from filtres.role_filter import RoleFilter
from keyboards.simple_row import client_keyboard, admin_keyboard
from services.message_deleter import delete_messages
from handlers.client import send_user_qr_code
from db.database_handler import get_user_coffe_number
from db.database_handler import update_coffe_number


common_router = Router()


logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
@common_router.message(
    Command(commands=["start"]),
    RoleFilter(role='Guest')
)
async def cmd_start(message: Message, state: FSMContext):
    await start_message_main_guest(message, state)


@common_router.message(
    Command(commands=["start"]),
    RoleFilter(role='Client')
)
async def cmd_start(message: Message, state: FSMContext):
    await start_message_main_guest(message, state)


@common_router.message(
    Command(commands=["start"]),
    RoleFilter(role='Administrator')
)
async def cmd_start(message: Message, state: FSMContext):
    await start_message_main_admin(message)

# async def start_message_main_client(message: Message):
#     await message.answer(
#         text=f"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
#         parse_mode='HTML',
#         reply_markup=client_keyboard()
#     )


async def start_message_main_admin(message: Message):
    full_text = message.text
    command, *args = full_text.split()

    if args:
        coffe_number = await get_user_coffe_number(args[0])
        if coffe_number is not None:
            text = f"QR-–∫–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞ <i>{args[0]}</i> <b>–ø—Ä–∏–Ω—è—Ç</b>.\n–°—Ç–∞—Ç—É—Å <b>{coffe_number + 1}/8</b> –∫–æ—Ñ–µ."
            await update_coffe_number(args[0])
        else:
            text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <i>{args[0]}</i> –Ω–µ –Ω–∞–π–¥–µ–Ω."
    else:
        await start_message_main_admin_null(message)


async def start_message_main_admin_null(message: Message):

    text = f"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>."

    await message.answer(
        text=text,
        parse_mode='HTML',
        reply_markup=admin_keyboard()
    )


# –≤—ã–∑–æ–≤ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
async def start_message_main_guest(message: Message, state: FSMContext):
    text = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Super Medovik!</b> –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π.\n\n" \
           "üéÇ –£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ –≤–∫—É—Å–∞–º–∏ –º–µ–¥–æ–≤–∏–∫–æ–≤, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é –ø–æ —Å–æ–≤–µ—Ç—Å–∫–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É. " \
           "–ê —Ç–∞–∫–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∫–æ—Ñ–µ –∏ —á–∞—è.\n\n" \
           "üí≥ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏! " \
           "–û—Ç–º–µ—Ç—å—Ç–µ <b>7 —á–∞—à–µ–∫ –∫–æ—Ñ–µ</b> <i>(–∏—Å–∫–ª—é—á–∞—è –∫–æ—Ñ–µ –∑–∞ 2 —Ä—É–±.)</i>, –∏ –ø–æ–ª—É—á–∏—Ç–µ 8-–π –∫–æ—Ñ–µ –∏–ª–∏ –º–µ–¥–æ–≤–∏–∫ <b>–≤ –ø–æ–¥–∞—Ä–æ–∫</b>!"

    keyboard_remove = ReplyKeyboardRemove()

    await message.answer(
        text=text,
        parse_mode='HTML',
        reply_markup=keyboard_remove
    )

    await send_user_qr_code(message, state)

    text = "üìç <b>–ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞: </b>\n" \
           "‚Ä¢ –Ø–∫—É–±–∞ –ö–æ–ª–∞—Å–∞, 25/1\n" \
           "‚Ä¢ –õ–æ–∂–∏–Ω—Å–∫–∞—è, 22 - 2\n" \
           "‚Ä¢ –£–º–∞–Ω—Å–∫–∞—è, 54 (–¢–¶ ¬´–ì–ª–æ–±–æ¬ª)\n\n" \
           "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Å! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ —á–∞–µ–ø–∏—Ç–∏—è! üç∞‚òï"

    await message.answer(
        text=text,
        parse_mode='HTML',
        reply_markup=client_keyboard()
    )





async def handle_unhandled_message(message: Message):
    message_ids_to_delete = [message.message_id - i for i in range(1)]
    await delete_messages(message.chat.id, message_ids_to_delete)
